name: Validate Develop

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  validate-and-build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Configure npm for GitHub Packages
        run: |
          echo "@orelnaranjod:registry=https://npm.pkg.github.com/" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${FLEX_LIB_TOKEN}" >> .npmrc
        env:
          FLEX_LIB_TOKEN: ${{ secrets.FLEX_LIB_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Format code
        run: npm run format

      - name: Run unit tests
        run: |
          echo "DATABASE_URL=postgresql://test_user:test_password@localhost:5432/test_db" > .env
          echo "DATABASE_TEST_URL=postgresql://test_user:test_password@localhost:5432/test_db" >> .env
          echo "JWT_PLATFORM_SECRET=test-jwt-platform-secret-that-is-at-least-32-characters-long" >> .env
          echo "JWT_TENANT_SECRET=test-jwt-tenant-secret-that-is-at-least-32-characters-long" >> .env
          echo "SUPER_ADMIN_PASSWORD=TestPassword123!" >> .env
          echo "TYPEORM_LOGGING=false" >> .env
          echo "TYPEORM_DROP_SCHEMA=true" >> .env
          echo "TYPEORM_SEEDER=true" >> .env
          echo "TYPEORM_SYNCHRONIZE=true" >> .env
          npm run test
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
          DATABASE_TEST_URL: postgresql://test_user:test_password@localhost:5432/test_db
          JWT_PLATFORM_SECRET: test-jwt-platform-secret-that-is-at-least-32-characters-long
          JWT_TENANT_SECRET: test-jwt-tenant-secret-that-is-at-least-32-characters-long
          SUPER_ADMIN_PASSWORD: TestPassword123!
          TYPEORM_LOGGING: false
          TYPEORM_DROP_SCHEMA: true
          TYPEORM_SEEDER: true
          TYPEORM_SYNCHRONIZE: true

      - name: Run e2e tests
        run: |
          echo "DATABASE_URL=postgresql://test_user:test_password@localhost:5432/test_db" > .env
          echo "DATABASE_TEST_URL=postgresql://test_user:test_password@localhost:5432/test_db" >> .env
          echo "JWT_PLATFORM_SECRET=test-jwt-platform-secret-that-is-at-least-32-characters-long" >> .env
          echo "JWT_TENANT_SECRET=test-jwt-tenant-secret-that-is-at-least-32-characters-long" >> .env
          echo "SUPER_ADMIN_PASSWORD=TestPassword123!" >> .env
          echo "TYPEORM_LOGGING=false" >> .env
          echo "TYPEORM_DROP_SCHEMA=true" >> .env
          echo "TYPEORM_SEEDER=true" >> .env
          echo "TYPEORM_SYNCHRONIZE=true" >> .env
          npm run test:e2e
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
          DATABASE_TEST_URL: postgresql://test_user:test_password@localhost:5432/test_db
          JWT_PLATFORM_SECRET: test-jwt-platform-secret-that-is-at-least-32-characters-long
          JWT_TENANT_SECRET: test-jwt-tenant-secret-that-is-at-least-32-characters-long
          SUPER_ADMIN_PASSWORD: TestPassword123!
          TYPEORM_LOGGING: false
          TYPEORM_DROP_SCHEMA: true
          TYPEORM_SEEDER: true
          TYPEORM_SYNCHRONIZE: true

      - name: Build package
        run: npm run build
